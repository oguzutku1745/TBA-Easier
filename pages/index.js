import { ConnectButton } from '@rainbow-me/rainbowkit';
import { useState, useEffect } from 'react';
import { useAccount } from 'wagmi'
import Head from 'next/head';
import styles from './Home.module.css';
import { init, useLazyQuery } from "@airstack/airstack-react";
import dynamic from 'next/dynamic';
init("59b3109f040748f9b4a038900c6fd3d5");

const NFTComponent = dynamic(() => import('@/components/NFTComponent/NFTComponent'), { ssr: false })

const Home = () => {

  const account = useAccount({
    onConnect({ address, connector, isReconnected }) {
      console.log('Connected', { address, connector, isReconnected })
    },
  })

  const [contractAddress, setContractAddress] = useState("");
  const [NFTS, setNFTS] = useState([])

  console.log(contractAddress)

  const variables = {
    "address": "0x6EE7AC91BbBc33e146726438496D407b08212b3b",
  };

  const NFTFetch = `query tokens($address: Identity!) {
  erc721: TokenBalances(
    input: {blockchain: ethereum, filter: {owner: {_in: [$address]}, tokenType: {_in: [ERC721]}}}
  ) {
    data:TokenBalance {
      amount
      chainId
      id
      tokenAddress
      tokenId
      tokenType
      token {
        name
        symbol
      }
      tokenNfts {
        tokenId
        metaData {
          name
        }
        contentValue {
          image {
            medium
            extraSmall
            large
            original
            small
          }
        }
      }
    }
  }
  }`

  const [fetch, { data, loading, error }] = useLazyQuery(NFTFetch, variables);

  useEffect(() => {
    if (account.address) {
      fetch()
    }
  },[account.address])

  useEffect(() => {
    if (data && data.erc721 && data.erc721.data) {
      console.log(data)
      setNFTS(data.erc721.data)
    }
  }, [data])

  console.log(NFTS)

  return (
    <div className={styles.container}>
      <Head>
        <title>TBA Easier</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>
        <ConnectButton />
      
        {NFTS.length > 0 && (
          NFTS.map((nft, index) => (
            <div key={index}>
              <NFTComponent nfts={nft} setContractAddress={setContractAddress} />
              
            </div>)
          )
        )}
        <button>Next</button>
        

      <footer className={styles.footer}>
        <a href="https://github.com/oguzutku1745" rel="noopener noreferrer" target="_blank">
          Made with ❤️ by KyaTzu
        </a>
      </footer>
    </div>
  );
};

export default Home;
